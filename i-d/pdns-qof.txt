


Internet Engineering Task Force                                 Dulaunoy
Internet-Draft                                                     CIRCL
Intended status: Informational                                    Kaplan
Expires: July 15, 2013                                           CERT.at
                                                                   Vixie
                                                                     ISC
                                                            January 2013

                   Passive DNS - Common Output Format
                 draft-ietf-dulaunoy-kaplan-pdns-cof-01

Abstract

   This document describes the output format used between Passive DNS
   query interface.  The output format description includes also a
   common meaning per Passive DNS system.

Status of this Memo

   This Internet-Draft will expire on July 15, 2013.

Copyright Notice

   Copyright (c) 2013 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (http://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.

Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  2
     1.1.  Requirements Language  . . . . . . . . . . . . . . . . . .  2
   2.  Limitation . . . . . . . . . . . . . . . . . . . . . . . . . .  2
   3.  Format . . . . . . . . . . . . . . . . . . . . . . . . . . . .  2
     3.1.  Output Format  . . . . . . . . . . . . . . . . . . . . . .  3
       3.1.1.  JSON . . . . . . . . . . . . . . . . . . . . . . . . .  3
   4.  Mandatory Fields . . . . . . . . . . . . . . . . . . . . . . .  3
     4.1.  rrname . . . . . . . . . . . . . . . . . . . . . . . . . .  3
     4.2.  rrtype . . . . . . . . . . . . . . . . . . . . . . . . . .  3
     4.3.  rdata  . . . . . . . . . . . . . . . . . . . . . . . . . .  4
     4.4.  time_first . . . . . . . . . . . . . . . . . . . . . . . .  4
     4.5.  time_last  . . . . . . . . . . . . . . . . . . . . . . . .  4
   5.  Optional Fields  . . . . . . . . . . . . . . . . . . . . . . .  4
     5.1.  count  . . . . . . . . . . . . . . . . . . . . . . . . . .  4
     5.2.  bailiwick  . . . . . . . . . . . . . . . . . . . . . . . .  4

Dulaunoy, Kaplan & Vixie          info                          [Page 1]

Internet-Draft             Abbreviated Title                January 2013

   6.  Additional Fields  . . . . . . . . . . . . . . . . . . . . . .  4
     6.1.  x-sensor_id  . . . . . . . . . . . . . . . . . . . . . . .  5
   7.  Extended Fields  . . . . . . . . . . . . . . . . . . . . . . .  5
   8.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . .  5
   9.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . .  5
   10. Security Considerations  . . . . . . . . . . . . . . . . . . .  5
   11. References . . . . . . . . . . . . . . . . . . . . . . . . . .  5
     11.1.  Normative References  . . . . . . . . . . . . . . . . . .  5
     11.2.  Informative References  . . . . . . . . . . . . . . . . .  5
   Appendix A. Additional Stuff . . . . . . . . . . . . . . . . . . .  6
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . .  6

1.  Introduction

   Passive DNS is a technique described by Florian Weimer in 2005 in
   Passive DNS replication, F Weimer - 17th Annual FIRST Conference on
   Computer Security.  Since then multiple Passive DNS implementations
   evolved over time.  Users of these Passive DNS servers query a server
   (often via Whois [Ref: WHOIS]), parse the results and process them in
   other applications.

   There are multiple implementation of Passive DNS software.  Users of
   passive DNS query each implementation and aggregate the results for
   their search.  This document describes the output format of three
   Passive DNS Systems which are in use today and which already share a
   nearly identical output format.  As the format and the meaning of
   output fields from each Passive DNS need to be consistent, we propose
   in this document a solution to commonly name each field along with
   their corresponding interpretation.  The format format is following a
   simple key-value structure.  The benefit of having a consistent
   Passive DNS output format is that multiple client implementations can
   query different servers without having to have a separate parser for
   each individual server.  [http://code.google.com/p/passive-dns-query-
   tool/] currently implements multiple parsers due to a lack of
   standardization.  The document does not describe the protocol (e.g.
   whois, HTTP REST or XMPP) used to query the Passive DNS.

1.1.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

2.  Limitation

   As a Passive DNS can include protection mechanisms for their
   operation, results might be different due to those protection
   measures.  These mechanisms filter out DNS answers if they fail some
   criteria.  The bailiwick algorithm (c.f.  http://www.isc.org/files/
   passive_dns_hardening_handout.pdf) protects the Passive DNS Database
   from cache poisoning attacks [ref: Dan Kaminsky].  Another
   limitiation that clients querying the database need to be aware of is
   that each query simply gets an snapshot-answer of the time of
   querying.  Clients MUST NOT rely on consistent answers.

3.  Format

Dulaunoy, Kaplan & Vixie          info                          [Page 2]

Internet-Draft             Abbreviated Title                January 2013


   A field is composed a key followed by a value separated by the single
   ':' character and a space before the value.  The format is based on
   the initial work done by Florian Weimer and the RIPE whois format
   (ref:http://www.enyo.de/fw/software/dnslogger/whois.html). The order
   of the fields is not significant for the same resource type.  That
   measn, the same name tuple plus timing information identifies a
   unique answer per server.

   A sample output using the common format:

       rrname: www.foo.be
       rrtype: AAAA
       rdata: 2001:6f8:202:2df::2
       time_first: 2010-07-26 13:04:01
       time_last: 2012-02-06 09:59:00
       count: 87

3.1.  Output Format

   Depending on the clients request, there might be one of three
   different answers from the server: Whois (human readable) output
   format (key-value), JSON [RFC4627] output and optionally Bind zone
   file output format.  XXX FIXME: how does the client select which
   answer format he wants?  XXX

3.1.1.  JSON

   The intent of this output format is to be easily parseable by
   scripts.  Every implementation SHOULD support the JSON output format.

   A sample output using the JSON format:

   ... (list of )...
   { "count": 97167,
   "time_first": "2010-06-25 17:07:02",
   "rrtype": "A", "rrname": "google-public-dns-a.google.com.",
   "rdata": "8.8.8.8",
   "time_last": "2013-02-05 17:34:03" }
   ... (separated by newline)...

4.  Mandatory Fields

   Implementation MUST support all the mandatory fields.

   The tuple (rrtype,rrname,rdata) will always be unique within one
   answer per server.

4.1.  rrname

   This field returns the name of the queried resource.

4.2.  rrtype




Dulaunoy, Kaplan & Vixie          info                          [Page 3]

Internet-Draft             Abbreviated Title                January 2013


   This field returns the resource record type as seen by the passive
   DNS. The key is rrtype and the value is in the interpreted record
   type.  If the value cannot be interpreted the decimal value is
   returned.  The resource record type can be any values as described by
   IANA in the DNS parameters document in the section 'DNS Label types'
   (http://www.iana.org/assignments/dns-parameters).  Currently known
   and supported textual descritptions of rrtypes are: A, AAAA, CNAME,
   PTR, SOA, TXT, DNAME, NS, SRV, RP, NAPTR, HINFO, A6 A client MUST be
   able to understand these textual rtype values.  In addition, a client
   MUST be able to handle a decimal value (as mentioned above) as
   answer.  XXX reference to RFC 3597.XXX

4.3.  rdata

   This field returns the data of the queried resource.  In general,
   this is to be interpreted as string.  Depending on the rtype, this
   can be an IPv4 or IPv6 address, a domain name (as in the case of
   CNAMEs), an SPF record, etc.  A client MUST be able to interpret any
   value which is legal as the right hand side in a DNS zone file  RFC
   1035 [RFC1035] and RFC 1034 [RFC1034].  XXX reference to RFC 3597.XXX

4.4.  time_first

   This field returns the first time that the record / unique tuple
   (rrname, rrtype, rdata) has been seen by the passive DNS. The date is
   expressed in seconds (decimal ascii) since 1st of January 1970 (unix
   timestamp). The time zone MUST be UTC.

4.5.  time_last

   This field returns the last time that the unique tuple (rrname,
   rrtype, rdata) record has been seen by the passive DNS. The date is
   XXXX.

5.  Optional Fields

   Implementation SHOULD support one or more field.

5.1.  count

   Specifies how many answers were received with the set of answers
   (i.e.  same data). The number of requests is expressed as a decimal
   value.

   Specifies the number of times this particular event denoted by the
   other type fields has been seen in the given time interval (between
   time_last and time_first). Decimal number.

5.2.  bailiwick

   The bailiwick is the best estimate of the apex of the zone where this
   data is authoritative.  String.

6.  Additional Fields


Dulaunoy, Kaplan & Vixie          info                          [Page 4]

Internet-Draft             Abbreviated Title                January 2013


   Implementations MAY support the following fields:

6.1.  x-sensor_id

   This field returns the sensor information where the record was seen.
   The sensor_id is an opaque byte string as defined by RFC5001 (XXX
   ref))

7.  Extended Fields

   An x- prefixed key means that is an extension and a non-standard
   field defined by the implementation of the passive DNS.

8.  Acknowledgements

   Thanks to the Passive DNS developers who contributed to the document.

9.  IANA Considerations

   This memo includes no request to IANA.

10.  Security Considerations

   In some cases, Passive DNS output might contain confidential
   information and its access might be restricted.  When an user is
   querying multiple Passive DNS and aggregating the data, the
   sensitivity of the data must be considered.

   Authentication and signing of the output MAY be implemented on the
   server via an extended field, namely x-signature-sha265 which
   contains a SHA256 signature of the output text, signed with the ssh-
   key of the server sending the answer.

   All drafts are required to have a security considerations section.
   See RFC 3552 [RFC3552] for a guide.

11.  References

11.1.  Normative References

   [RFC1034]  Mockapetris, P., "Domain names - concepts and facilities",
              STD 13, RFC 1034, November 1987.

   [RFC1035]  Mockapetris, P., "Domain names - implementation and
              specification", STD 13, RFC 1035, November 1987.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC4627]  Crockford, D., "The application/json Media Type for
              JavaScript Object Notation (JSON)", RFC 4627, July 2006.

   [min_ref]  authSurName, authInitials, "Minimal Reference", 2006.

11.2.  Informative References

Dulaunoy, Kaplan & Vixie          info                          [Page 5]

Internet-Draft             Abbreviated Title                January 2013


   [DOMINATION]
              Mad Dominators, Inc., "Ultimate Plan for Taking Over the
              World", 1984, <http://www.example.com/dominator.html>.

   [I-D.narten-iana-considerations-rfc2434bis]
              Narten, T and H Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs", Internet-Draft
              draft-narten-iana-considerations-rfc2434bis-09, March
              2008.

   [RFC2629]  Rose, M.T., "Writing I-Ds and RFCs using XML", RFC 2629,
              June 1999.

   [RFC3552]  Rescorla, E. and B. Korver, "Guidelines for Writing RFC
              Text on Security Considerations", BCP 72, RFC 3552, July
              2003.

Appendix A.  Additional Stuff

   This becomes an Appendix.

Authors' Addresses

   Alexandre Dulaunoy
   CIRCL
   41, avenue de la gare
   Luxembourg, L-1611
   LU
   
   Phone: (+352) 247 88444
   Email: alexandre.dulaunoy@circl.lu
   URI:   http://www.circl.lu/


   Leon Aaron Kaplan
   CERT.at
   Karlsplatz 1/2/9
   Vienna, A-1010
   AT
   
   Phone: +43 1 5056416 78
   Email: kaplan@cert.at
   URI:   http://www.cert.at/


   Paul Vixie
   ISC
   
   Email: vixie@isc.org
   URI:   http://www.isc.org/






Dulaunoy, Kaplan & Vixie          info                          [Page 6]
